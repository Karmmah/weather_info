#openweathermap token for API access needs to be placed in same directory as this file in a file named "openweathermap_token.txt"
#towns that should be displayed should be placed in "towns.txt" file separated by ","

import sys,os,time

libdir = '/home/pi/bcm2835-1.60/e-Paper/RaspberryPi_JetsonNano/python/lib' #for epd library
#picdir = '/home/pi/bcm2835-1.60/e-Paper/RaspberryPi_JetsonNano/python/pic' #for fonts
if os.path.exists(libdir):
	sys.path.append(libdir)
else:
	print('libdir path not found')

from waveshare_epd import epd2in13_V2
#from PIL import Image,ImageDraw,ImageFont

#[temp,condition,wind_angle,wind_speed]
#[z_string,z_float,t,s,c,r,p,h
import weather_tools,weather_gui
def update_screen(epd,token,town):
	print("Town: "+town)
	current = weather_tools.get_current_weather(token,town)
	print("Received current weather")
	forecast = weather_tools.get_forecast(token,town)
	print("Received forecast data")
	image = weather_gui.get_image(epd,town,current,forecast)
	epd.display(epd.getbuffer(image))

	# ADD WEATHER LOGGING HERE
#	file = open("weather_log.txt","a")

#	gather_flag = True if time.localtime().tm_hour == 0 else False #prediction data for next five days will be saved each day at midnight

#	if time.localtime().tm_hour in [0,6,12,18]: #four times a day save the actual weather for comparision to the forecast that was made
#		try:
#			r = data["rain"]["1h"]
#		except Exception as e:
#			error_file.write("\nError in weather data: "+str(e)+"\n")
#			r = 0
#		prediction = str(data['dt'])+"-"+str(t)+"-"+str(s)+"-"+str(c)+"-"+str(r)+"-"+str(p)+"-"+str(h)
#			if url_data['list'][i]['dt_txt'][11:13] in ["00","06","12","18"]: #once a day save the forecast for four points each day for the next five days to file, for analysis how accurate the forecast is depending how far it predicts the weather
#				prediction = str(url_data['list'][i]['dt'])+"-"+str(t)+"-"+str(s)+"-"+str(c)+"-"+str(r)+"-"+str(p)+"-"+str(h)

def main():
	file = open("log.txt","a")
	file.write(time.strftime('%H:%M:%S'))
	try:
		print("Starting weather.py")
		with open("update_interval.txt") as file:
			update_interval = int(file.read().rstrip("\n")) #seconds (once every hour)
		print("Update Interval: "+str(update_interval)+" seconds")
		with open("openweathermap_token.txt") as file:
			token = file.read().rstrip("\n")

		print("Starting and initialising e-paper module")
#		global epd
		epd = epd2in13_V2.EPD()
		epd.init(epd.FULL_UPDATE)
		epd.Clear(0xFF)

		town = "Aachen"
		while True: #loop that runs to update screen each update interval
			epd.init(epd.FULL_UPDATE)
			update_screen(epd,token,town)
			epd.sleep()
			print("Power saving mode (Ctrl+c to stop program)")
			time.sleep(update_interval)

	except IOError as e:
		print(e)
	except KeyboardInterrupt:
		print("\nProgram stopped")
		epd2in13_V2.epdconfig.module_exit()
		exit()

if __name__ == "__main__":
	main()
